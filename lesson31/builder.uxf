<diagram program="umletino" version="15.1"><zoom_level>10</zoom_level><help_text>Car builder
--
- car_magazine_ad : CarMagazineAd
--
+ setSeats(number)
+ setEngine(engine)
+ setTripComputer(...)
+ setGPS(...)
+ getInfo() : CarMagazineAd
</help_text><element><id>UMLClass</id><coordinates><x>410</x><y>160</y><w>100</w><h>30</h></coordinates><panel_attributes>Client
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>280</x><y>570</y><w>160</w><h>140</h></coordinates><panel_attributes>Car Builder
--
- car : Car
--
+ setSeats(number)
+ setEngine(engine)
+ setTripComputer(...)
+ setGPS(...)
+ getInfo() : self.Car
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>500</x><y>570</y><w>230</w><h>140</h></coordinates><panel_attributes>Car magazine ad builder
--
- car_magazine_ad : CarMagazineAd
--
+ setSeats(number)
+ setEngine(engine)
+ setTripComputer(...)
+ setGPS(...)
+ getInfo() : CarMagazineAd
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>400</x><y>310</y><w>190</w><h>150</h></coordinates><panel_attributes>&lt;&lt;interface&gt;&gt;
builder
--
+ setSeats(number)
+ method setEngine(engine)
+ method setTripComputer(...)
+ method setGPS(...)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>280</x><y>810</y><w>100</w><h>30</h></coordinates><panel_attributes>Car
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>560</x><y>770</y><w>100</w><h>30</h></coordinates><panel_attributes>CarMagazineAd</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>290</x><y>170</y><w>140</w><h>420</h></coordinates><panel_attributes>lt=&lt;..</panel_attributes><additional_attributes>10;400;10;10;120;10</additional_attributes></element><element><id>Relation</id><coordinates><x>480</x><y>450</y><w>150</w><h>140</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>10;10;10;60;130;120</additional_attributes></element><element><id>Relation</id><coordinates><x>360</x><y>450</y><w>150</w><h>140</h></coordinates><panel_attributes>lt=&lt;&lt;.</panel_attributes><additional_attributes>130;10;130;60;10;120</additional_attributes></element><element><id>UMLNote</id><coordinates><x>430</x><y>30</y><w>140</w><h>70</h></coordinates><panel_attributes>Note..
bg=blue
cd = Car()
cd.setSeats(1).setEngine("none").setTripComputer().setGPS()
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLNote</id><coordinates><x>60</x><y>440</y><w>140</w><h>70</h></coordinates><panel_attributes>Note..
bg=blue
Each method needs to return "self"
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>160</x><y>500</y><w>140</w><h>140</h></coordinates><panel_attributes>lt=..</panel_attributes><additional_attributes>120;120;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>490</x><y>90</y><w>30</w><h>90</h></coordinates><panel_attributes>lt=..</panel_attributes><additional_attributes>10;70;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>350</x><y>700</y><w>30</w><h>130</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;110;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>600</x><y>700</y><w>30</w><h>90</h></coordinates><panel_attributes>lt=&lt;-</panel_attributes><additional_attributes>10;70;10;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>30</x><y>770</y><w>190</w><h>100</h></coordinates><panel_attributes>Note..
bg=blue
style=wordwrap
Directed association = a relationship where one class knows about or uses another.
Because CarBuilder builds and references a Car instance internally. by holding an instance of Car as an attribute, called self.car</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>210</x><y>730</y><w>170</w><h>90</h></coordinates><panel_attributes>lt=..</panel_attributes><additional_attributes>150;10;10;70</additional_attributes></element><element><id>UMLNote</id><coordinates><x>700</x><y>450</y><w>140</w><h>70</h></coordinates><panel_attributes>Note..
bg=blue
Realization / Implementation
this class implements the operations defined by that interface
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>530</x><y>470</y><w>190</w><h>80</h></coordinates><panel_attributes>lt=..</panel_attributes><additional_attributes>10;60;170;10</additional_attributes></element><element><id>UMLNote</id><coordinates><x>110</x><y>230</y><w>140</w><h>70</h></coordinates><panel_attributes>Dependency
one class temporarily uses or depends on another to perform a function
bg=blue
style=wordwrap</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>240</x><y>260</y><w>80</w><h>40</h></coordinates><panel_attributes>lt=..</panel_attributes><additional_attributes>10;10;60;20</additional_attributes></element></diagram>